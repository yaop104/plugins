<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
	default-autowire="byType">
	
	<!--<import resource="applicationContext-bean.xml"/>-->

	
	<!-- ============================== 数据库配置 ==================================== -->
	<!-- 数据源配置 -->
	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
  			<value>jdbc:mysql://localhost:3306/plugins?useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true</value>
			<!--<value>-->
				<!--jdbc:mysql://120.25.196.55:3306/plugins?useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true-->
			<!--</value>-->
		</property>
		<property name="username">
			<value>root</value>
			<!--<value>yao</value>-->
		</property>
		<property name="password">
  			<!--<value>huijiao</value>-->
			<value>yao</value>
		</property>
	</bean>
	
	<!-- ================================ MyBatis SqlSession配置 ========================================= -->
	<!-- 使用SqlSessionFactoryBean工厂产生SqlSession对象，方便后期注入Dao -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis_config/Configuration.xml"></property>
		<!-- <property name="transactionFactoryClass" value="org.mybatis.spring.transaction.SpringManagedTransactionFactory" />
		<property name="transactionFactoryClass" value="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" /> -->
	</bean>
	
	<bean class="org.mybatis.spring.annotation.MapperScannerPostProcessor">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.sme.dao" />
	</bean>
	
	<!-- ================================= 事务控制相关 ============================================= -->
   	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
    	<property name="dataSource" ref="dataSource"></property>
 	</bean>   
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.RuntimeException" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			
			<tx:method name="find*" propagation="SUPPORTS"/>
			<tx:method name="get*" propagation="SUPPORTS"/>
			<tx:method name="select*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* *.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>
	
	
	<!-- springApplicationContext -->
    <bean id="springContextUtil" class="com.sme.util.SpringContextUtil" lazy-init="false" />
	<bean id="msgcontentServiceImplContext" class="com.sme.service.impl.MsgcontentServiceImpl" lazy-init="false" />
	<!-- quartz -->
<!-- 	<import resource="spring_quartz.xml" />  -->
</beans>